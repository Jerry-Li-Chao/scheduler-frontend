{"version":3,"sources":["Navigation.js","Card.js","Modal.js","Posts.js","Post.js","Favorited.js","CreatePostForm.js","EditPostForm.js","Procrastinatometer.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","className","exact","to","React","Component","Card","props","state","selected","selectedColor","emptyColor","displayColor","post","passingPost","handleClick","bind","this","setState","renderedTitle","title","updatedColor","substring","length","onClick","renderCard","Modal","modalContainer","document","getElementById","ReactDom","createPortal","tabIndex","type","onClose","body","Posts","posts","isModalOpen","fetch","then","response","json","console","log","init_color","select_color","curPost","map","priority","initColor","finished","taskname","ddl","deadline","appendedTitle","toggleFinished","style","width","backgroundColor","description","id","Post","match","params","postId","window","confirm","url","method","toast","success","history","push","JSON","stringify","headers","deletePost","favorited","removeFavorited","addToFavorited","CreatePostForm","validate","nameError","descriptionError","deadlineError","priorityError","event","target","value","preventDefault","onSubmit","handleSubmit","noValidate","htmlFor","onChange","handleTitleChange","required","handleBodyChange","handleDDLChange","handlePriorityChange","EditPostForm","Procrastinatometer","dates","datesdesc","sort","a","b","Date","slice","App","path","component","NoMatch","location","useLocation","pathname","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b508eb5c.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\n\nexport default class Navigation extends React.Component {\n  render() {\n    return (\n      <nav>\n        <ul className=\"nav justify-content-center\">\n          <li className=\"nav-item\">\n            <NavLink exact={true} className=\"nav-link\" to=\"/\">\n              My Schdule\n            </NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <NavLink exact={true} className=\"nav-link\" to=\"/posts/new\">\n              Create a task\n            </NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <NavLink exact={true} className=\"nav-link\" to=\"/favorited\">\n              Favorited\n            </NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <NavLink exact={true} className=\"nav-link\" to=\"/procrastinatometer\">\n              Procrastinatometer\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n    );\n  }\n}\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport PropTypes from \"prop-types\";\n\nexport default class Card extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selected: false,\n      selectedColor: this.props.selectedColor || \"yellow\",\n      emptyColor: this.props.emptyColor || \"blue\",\n      displayColor: this.props.emptyColor || \"green\",\n      post: this.props.passingPost\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    if (this.state.selected) {\n      this.setState({ selected: false });\n    } else if (!this.state.selected) {\n      this.setState({ selected: true });\n    }\n\n    let renderedTitle = this.props.title;\n    let updatedColor = \"\";\n    if (!this.state.selected) {\n      renderedTitle += \" [FINISHED]\";\n      updatedColor = this.state.selectedColor;\n    } else if (this.state.selected) {\n      renderedTitle = renderedTitle.substring(0, renderedTitle.length);\n      updatedColor = this.state.emptyColor;\n    }\n    this.props.onClick(renderedTitle, updatedColor, this.state.selectedColor, this.state.post);\n  }\n\n  render() {\n    const { renderCard } = this.props;\n    return renderCard(this.handleClick);\n  }\n}\n\nCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n  renderCard: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport ReactDom from \"react-dom\";\n\nexport default class Modal extends React.Component {\n  render() {\n    const modalContainer = document.getElementById(\"modal-container\");\n\n    return ReactDom.createPortal(\n      <div className=\"modal\" tabIndex=\"-1\">\n        <div className=\"modal-dialog\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\">{this.props.title}</h5>\n              <button\n                type=\"button\"\n                className=\"btn-close\"\n                aria-label=\"Close\"\n                onClick={this.props.onClose}\n              ></button>\n            </div>\n            <div className=\"modal-body\">{this.props.body()}</div>\n            <div className=\"modal-footer\">\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                onClick={this.props.onClose}\n              >\n                Close\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>,\n      modalContainer\n    );\n  }\n}\n","import React from \"react\";\nimport Card from \"./Card\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faTrashAlt, faEdit } from \"@fortawesome/free-solid-svg-icons\"\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport \"./Card.css\";\nimport Modal from \"./Modal\"\n\nexport default class Posts extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      posts: [],\n      isModalOpen: false\n    };\n  }\n\n  componentDidMount() {\n      document.title = \"Scheduler Page\";\n    fetch(\n      \"https://jerryli-scheduler-api.herokuapp.com/api/posts\"\n    )\n      .then((response) => {\n        // response is a promise\n        return response.json();\n      })\n      .then((json) => {\n        console.log(json);\n        this.setState({ posts: json });\n      });\n  }\n\n  toggleFinished(init_color, select_color, curPost) {\n      // if selected, change finished state to true\n    //   console.log(init_color, select_color);\n    //   if(init_color === select_color) {\n    //       console.log(\"set \" + curPost.finished  + \" finished to true\");\n    //     fetch(`https://jerryli-scheduler-api.herokuapp.com/api/posts/${curPost.id}`, {\n    //     method: \"PUT\",\n    //     body: JSON.stringify({\n    //         \"taskname\": curPost.taskname,\n    //         \"description\": curPost.description,\n    //         \"deadline\": curPost.deadline,\n    //         \"favorited\": curPost.favorited,\n    //         \"priority\": curPost.priority,\n    //         \"finished\": \"true\"\n    //     }),\n    //     headers: {\n    //       \"Content-type\": \"application/json\"\n    //     }\n    //   })\n    //     .then((response) => {\n    //       return response.json();\n    //     })\n    //     .then((json) => {\n    //       console.log(json);\n    //     });\n    //   }\n    //   else {\n    //     console.log(\"set \" + curPost.finished  + \" finished to false\");\n        \n    //     fetch(`https://jerryli-scheduler-api.herokuapp.com/api/posts/${curPost.id}`, {\n    //     method: \"PUT\",\n    //     body: JSON.stringify({\n    //         \"taskname\": curPost.taskname,\n    //         \"description\": curPost.description,\n    //         \"deadline\": curPost.deadline,\n    //         \"favorited\": curPost.favorited,\n    //         \"priority\": curPost.priority,\n    //         \"finished\": \"false\"\n    //     }),\n    //     headers: {\n    //       \"Content-type\": \"application/json\"\n    //     }\n    //   })\n    //     .then((response) => {\n    //       return response.json();\n    //     })\n    //     .then((json) => {\n    //       console.log(json);\n    //     });\n    //   }\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.setState({ isModalOpen: true });\n          }}\n        >\n          Tips for using this scheduler\n        </button>\n\n        {this.state.isModalOpen && (\n          <Modal\n            title=\"Tips for using this scheduler\"\n            body={() => {\n              return (<ol>\n                  <li>\"My Schedule\" Tab provide you a view of your tasks \n                      filtered by the priority levels of the task</li>\n                  <li>\"Create a Task\" Tab provide a form with form validation functionalities, and\n                      the added task will appear in the \"My Schedule\" Tab\n                  </li>\n                  <li>Try clicking on one of the Tabs, you will have a clearer view of the task information. \n                      In there, you will be able to Edit, Delete, or Add to Favorite\n                  </li>\n                  <li>Procrastinatometer detects how many tasks have imminent deadlines \n                      and gives a simple summary report</li>\n              </ol>);\n            }}\n            onClose={() => {\n              this.setState({ isModalOpen: false });\n            }}\n          />\n        )}\n\n        <h2>High Priority Tasks</h2>\n        {this.state.posts.map((post) => {\n            if(post.priority !== \"h\") {\n                return;\n            }\n            let initColor;\n            if(post.priority === \"l\"){\n                initColor = \"lightyellow\"\n            }\n            else if(post.priority === \"m\"){\n                initColor = \"coral\"\n            }\n            else if(post.priority === \"h\") {\n                initColor = \"crimson\"\n            }\n            \n            if(post.finished === true) {\n                console.log(post.taskname + \" is finished\");\n                initColor = \"lightgreen\"\n            }\n            let ddl = post.deadline;\n            ddl = ddl.substring(0, 10) + \" \" + ddl.substring(11, 16);\n            if(ddl.substring(11,13) < 12) { ddl += \" AM\"}\n            else {ddl += \" PM\"}\n            \n            return (\n                <Card\n                    key={post.id}\n                    title={post.taskname}\n                    onClick={(appendedTitle, updatedColor, select_color, curPost) => {\n                        post.taskname = appendedTitle;\n                        initColor = updatedColor;\n                        this.toggleFinished(updatedColor, select_color, curPost);\n                    }}\n                    passingPost={post}\n                    emptyColor={initColor}\n                    selectedColor=\"lightgreen\"\n                    renderCard={(onClick) => {\n                        return (<>\n                                <button\n                                    type=\"button\"\n                                    className=\"card btn\"\n                                    style={{\n                                    width: \"18rem\",\n                                    backgroundColor: initColor\n                                    }}\n                                    onClick={onClick}\n                                >\n                                    <div className=\"card-body\">\n                                    <h5 className=\"card-title\">{post.taskname}</h5>\n                                    <p className=\"card-text\">\n                                        {post.description}\n                                    </p>\n                                    <p className=\"card-text\">\n                                        DDL: {ddl}\n                                    </p>\n                                    </div>\n                                </button>\n                            <Link to={`/posts/${post.id}`}>\n                                <button \n                                    type=\"button\"\n                                    className=\"btn btn-secondary\">\n                                        Edit/Delete/Favorite \"{post.taskname}\"\n                                </button>\n                            </Link>\n                            </>\n                        );\n                    }}\n                    ></Card>\n                );\n                }\n            )}\n    </div>\n\n        <div className=\"row\">\n            <h2>Medium Priority Tasks</h2>\n            {this.state.posts.map((post) => {\n            if(post.priority !== \"m\") {\n                return;\n            }\n            let initColor;\n            if(post.priority === \"l\"){\n                initColor = \"lightyellow\"\n            }\n            else if(post.priority === \"m\"){\n                initColor = \"coral\"\n            }\n            else if(post.priority === \"h\") {\n                initColor = \"crimson\"\n            }\n            let ddl = post.deadline;\n            ddl = ddl.substring(0, 10) + \" \" + ddl.substring(11, 16);\n            if(ddl.substring(11,13) < 12) { ddl += \" AM\"}\n            else {ddl += \" PM\"}\n            \n            return (\n                <Card\n                    key={post.id}\n                    title={post.taskname}\n                    onClick={(appendedTitle, updatedColor) => {\n                        post.taskname = appendedTitle;\n                        initColor = updatedColor;\n                    }}\n                    emptyColor={initColor}\n                    selectedColor=\"lightgreen\"\n                    renderCard={(onClick) => {\n                        return (<>\n                            <button\n                                type=\"button\"\n                                className=\"card btn\"\n                                style={{\n                                width: \"18rem\",\n                                backgroundColor: initColor\n                                }}\n                                onClick={onClick}\n                            >\n                                <div className=\"card-body\">\n                                <h5 className=\"card-title\">{post.taskname}</h5>\n                                <p className=\"card-text\">\n                                    {post.description}\n                                </p>\n                                <p className=\"card-text\">\n                                    DDL: {ddl}\n                                </p>\n                                </div>\n                            </button>\n                        <Link to={`/posts/${post.id}`}>\n                            <button \n                                type=\"button\"\n                                className=\"btn btn-secondary\">\n                                    Edit/Delete/Favorite \"{post.taskname}\"\n                            </button>\n                        </Link>\n                        </>\n                    );\n                    }}\n                    ></Card>\n                );\n                }\n            )}\n        </div>\n\n        <div className=\"row\">\n            <h2>Low Priority Tasks</h2>\n            {this.state.posts.map((post) => {\n            if(post.priority !== \"l\") {\n                return;\n            }\n            let initColor;\n            if(post.priority === \"l\"){\n                initColor = \"lightyellow\"\n            }\n            else if(post.priority === \"m\"){\n                initColor = \"coral\"\n            }\n            else if(post.priority === \"h\") {\n                initColor = \"crimson\"\n            }\n            let ddl = post.deadline;\n            ddl = ddl.substring(0, 10) + \" \" + ddl.substring(11, 16);\n            if(ddl.substring(11,13) < 12) { ddl += \" AM\"}\n            else {ddl += \" PM\"}\n            \n            return (\n                <Card\n                    key={post.id}\n                    title={post.taskname}\n                    onClick={(appendedTitle, updatedColor) => {\n                        post.taskname = appendedTitle;\n                        initColor = updatedColor;\n                    }}\n                    emptyColor={initColor}\n                    selectedColor=\"lightgreen\"\n                    renderCard={(onClick) => {\n                        return (<>\n                            <button\n                                type=\"button\"\n                                className=\"card btn\"\n                                style={{\n                                width: \"18rem\",\n                                backgroundColor: initColor\n                                }}\n                                onClick={onClick}\n                            >\n                                <div className=\"card-body\">\n                                <h5 className=\"card-title\">{post.taskname}</h5>\n                                <p className=\"card-text\">\n                                    {post.description}\n                                </p>\n                                <p className=\"card-text\">\n                                    DDL: {ddl}\n                                </p>\n                                </div>\n                            </button>\n                        <Link to={`/posts/${post.id}`}>\n                            <button \n                                type=\"button\"\n                                className=\"btn btn-secondary\">\n                                    Edit/Delete/Favorite \"{post.taskname}\"\n                            </button>\n                        </Link>\n                        </>\n                    );\n                    }}\n                    ></Card>\n                );\n                }\n            )}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, {useEffect} from \"react\";\nimport { toast } from \"react-toastify\";\nimport { Link } from \"react-router-dom\";\nimport \"./Post.css\";\n\nexport default class Post extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      post: {}\n    };\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params.postId;\n    fetch(`https://jerryli-scheduler-api.herokuapp.com/api/posts/${id}`)\n      .then((response) => {\n        // response is a promise\n        return response.json();\n      })\n      .then((json) => {\n        this.setState({ post: json });\n      });\n  }\n\n  deletePost() {\n    const isDeleteConfirmed = window.confirm(\n      \"Are you sure you want to delete this task?\"\n    );\n\n    if (!isDeleteConfirmed) {\n      return;\n    }\n\n    const url = `https://jerryli-scheduler-api.herokuapp.com/api/posts/${this.state.post.id}`;\n    fetch(url, {\n      method: \"DELETE\"\n    }).then(() => {\n      toast.success(`Post \"${this.state.post.taskname}\" was deleted`);\n      this.props.history.push(\"/\");\n    });\n  }\n\n  removeFavorited() {\n    fetch(`https://jerryli-scheduler-api.herokuapp.com/api/posts/${this.state.post.id}`, {\n        method: \"PUT\",\n        body: JSON.stringify({\n            \"taskname\": this.state.post.taskname,\n            \"description\": this.state.post.description,\n            \"deadline\": this.state.post.deadline,\n            \"favorited\": false,\n            \"priority\": this.state.post.priority\n        }),\n        headers: {\n          \"Content-type\": \"application/json\"\n        }\n      })\n        .then((response) => {\n          return response.json();\n        })\n        .then((json) => {\n          console.log(json);\n          toast.success(`Task \"${json.taskname}\" was removed from Favorited List`);\n          this.props.history.push(\"/\");\n        });\n  }\n\n  addToFavorited() {\n    fetch(`https://jerryli-scheduler-api.herokuapp.com/api/posts/${this.state.post.id}`, {\n        method: \"PUT\",\n        body: JSON.stringify({\n            \"taskname\": this.state.post.taskname,\n            \"description\": this.state.post.description,\n            \"deadline\": this.state.post.deadline,\n            \"favorited\": true,\n            \"priority\": this.state.post.priority\n        }),\n        headers: {\n          \"Content-type\": \"application/json\"\n        }\n      })\n        .then((response) => {\n          return response.json();\n        })\n        .then((json) => {\n          console.log(json);\n          toast.success(`Task \"${json.taskname}\" was added to Favorited List`);\n          this.props.history.push(\"/\");\n        });\n  }\n\n  render() {\n    // console.log(this.state.post.taskname);\n    document.title = `${this.state.post.taskname} Task Page`\n    return (\n      <>\n        <h1>{this.state.post.taskname}</h1>\n        <p>{this.state.post.description}</p>\n        <div className=\"btn-group\">\n          <Link\n            to={`/posts/${this.state.post.id}/edit`}\n          >\n            <button className=\"btn btn-primary\">Edit</button>\n          </Link>\n          <button\n            type=\"button\"\n            className=\"btn btn-danger\"\n            onClick={() => {\n              this.deletePost();\n            }}\n          >\n            Delete\n          </button>\n            \n          {!this.state.post.favorited ? (\n          <button type=\"button\" className=\"btn btn-success\" onClick={() => {\n            this.addToFavorited();\n          }}>\n            Add to favorited List\n          </button>) : (\n            <button type=\"button\" className=\"btn btn-warning\" onClick={() => {\n                this.removeFavorited();\n              }}>\n                Remove from favorited List\n            </button>\n          )}\n          \n          \n        </div>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport Card from \"./Card\";\nimport { Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport \"./Card.css\";\n\nexport default class Posts extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      posts: []\n    };\n  }\n\n  componentDidMount() {\n    document.title = \"Favorited Page\";\n    fetch(\n      \"https://jerryli-scheduler-api.herokuapp.com/api/posts\"\n    )\n      .then((response) => {\n        // response is a promise\n        return response.json();\n      })\n      .then((json) => {\n        console.log(json);\n        this.setState({ posts: json });\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n        <h2>Favorited Tasks</h2>\n        {this.state.posts.map((post) => {\n            if(post.favorited === false) {\n                return;\n            }\n            let initColor;\n            if(post.priority === \"l\"){\n                initColor = \"lightyellow\"\n            }\n            else if(post.priority === \"m\"){\n                initColor = \"coral\"\n            }\n            else if(post.priority === \"h\") {\n                initColor = \"crimson\"\n            }\n            let ddl = post.deadline;\n            ddl = ddl.substring(0, 10) + \" \" + ddl.substring(11, 16);\n            if(ddl.substring(11,13) < 12) { ddl += \" AM\"}\n            else {ddl += \" PM\"}\n            \n            return (\n                <Card\n                    key={post.id}\n                    title={post.taskname}\n                    onClick={(appendedTitle, updatedColor) => {\n                        this.setState({ title: appendedTitle, displayColor: updatedColor });\n                    }}\n                    emptyColor=\"lightyellow\"\n                    selectedColor=\"lightgreen\"\n                    renderCard={(onClick) => {\n                        return (\n                            <Link to={`/posts/${post.id}`}>\n                                <button\n                                    data-inline=\"true\"\n                                    type=\"button\"\n                                    className=\"card btn\"\n                                    style={{\n                                    width: \"18rem\",\n                                    backgroundColor: initColor\n                                    }}\n                                    onClick={onClick}\n                                >\n                                    <div className=\"card-body\">\n                                    <h5 className=\"card-title\">{post.taskname}</h5>\n                                    <p className=\"card-text\">\n                                        {post.description}\n                                    </p>\n                                    <p className=\"card-text\">\n                                        DDL: {ddl}\n                                    </p>\n                                    </div>\n                                </button>\n                            </Link>\n                        );\n                    }}\n                    ></Card>\n                );\n                }\n            )}\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { toast } from \"react-toastify\";\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport \"./CreatePostForm.css\";\n\nexport default class CreatePostForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      taskname: \"\",\n      description: \"\",\n      deadline: \"\",\n      priority: \"\",\n      nameError: \"\",\n      descriptionError: \"\",\n      deadlineError: \"\",\n      priorityError: \"\"\n    };\n  }\n\n  componentDidMount() {\n    document.title = \"Create a Task Page\";\n  }\n\n  handleTitleChange(event) {\n    this.setState({ taskname: event.target.value });\n  }\n\n  handleBodyChange(event) {\n    this.setState({ description: event.target.value });\n  }\n\n  handlePriorityChange(event) {\n    this.setState({ priority: event.target.value });\n  }\n\n  handleDDLChange(event) {\n    this.setState( { deadline: event.target.value });\n  }\n\n  validate = () => {\n    \n    let nameError =  \"\";\n    let descriptionError = \"\";\n    let deadlineError = \"\";\n    let priorityError = \"\";\n\n    if(this.state.taskname === \"\") {\n      nameError = \"Taskname cannot be empty\";\n    } else {\n      nameError = \"\";\n    }\n\n    if(this.state.description === \"\") {\n      descriptionError = \"description cannot be empty\";\n    } else {\n      descriptionError = \"\";\n    }\n\n    if(this.state.deadline === \"\") {\n      deadlineError = \"deadline cannot be empty\";\n    } else {\n      deadlineError = \"\";\n    }\n\n    if(this.state.priority === \"\") {\n      priorityError = \"select a priority\";\n    } else {\n      priorityError = \"\";\n    }\n\n    if(nameError || descriptionError || deadlineError || priorityError) {\n      this.setState({nameError});\n      this.setState({descriptionError});\n      this.setState({deadlineError});\n      this.setState({priorityError});\n      return false;\n    }\n    return true;\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    \n    const isValid = this.validate();\n    // console.log(isValid);\n    // console.log(this.state);\n\n    if(isValid) {\n\n      fetch(\"https://jerryli-scheduler-api.herokuapp.com/api/posts\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          \"taskname\": this.state.taskname,\n          \"description\": this.state.description,\n          \"deadline\": this.state.deadline,\n          \"favorited\": \"false\",\n          \"priority\": this.state.priority\n        }),\n        headers: {\n          \"Content-type\": \"application/json\"\n        }\n      })\n        .then((response) => {\n          return response.json();\n        })\n        .then((json) => {\n          console.log(json);\n          toast.success(`Task \"${this.state.taskname}\" was successfully created`);\n          // React gave us the history prop when we passed\n          // CreatePostForm in component={..}\n          // push(\"/\"): change the current url to \"/\", weird function name though\n          this.props.history.push(\"/\");\n        });\n    }\n  }\n\n  render() {\n    return (\n      <form\n        className=\"needs-validation\"\n        onSubmit={(event) => {\n          this.handleSubmit(event);\n        }}\n        noValidate\n      >\n        <div className=\"my-3\">\n          <label htmlFor=\"title\" className=\"form-label\">\n            Taskname\n          </label>\n          <input\n            id=\"title\"\n            className=\"form-control\"\n            value={this.state.taskname || \"\"}\n            onChange={(event) => {\n              this.handleTitleChange(event);\n            }}\n            required\n          />\n          {this.state.nameError ? \n          (<div className=\"error\">Taskname cannot be empty</div>) : \n          (null)}\n          \n          \n          </div>\n\n          <div className=\"my-3\">\n            <label htmlFor=\"body\" className=\"form-label\">\n              Description\n            </label>\n            <textarea\n              id=\"body\"\n              className=\"form-control\"\n              value={this.state.description || \"\"}\n              onChange={(event) => {\n                this.handleBodyChange(event);\n              }}\n              required\n            ></textarea>\n            {this.state.descriptionError ? \n            (<div className=\"error\">Description cannot be empty</div>) : \n            (null)}\n\n          </div>\n          <div className=\"my-3\">\n            <label htmlFor=\"ddl\" className=\"form-label\">\n              Deadline\n            </label>\n            <input\n              id=\"ddl\"\n              type=\"datetime-local\"\n              className=\"form-select\"\n              value={this.state.deadline}\n              onChange={(event) => {\n                this.handleDDLChange(event);\n              }}\n              required\n            />\n            {this.state.deadlineError ? \n            (<div className=\"error\">Deadline cannot be empty</div>) : \n            (null)}\n          </div>\n\n          <div className=\"my-3\">\n            <label htmlFor=\"priority\" className=\"form-label\">\n              Priority\n            </label>\n            <select\n              id=\"priority\"\n              className=\"form-select\"\n              value={this.state.priority}\n              onChange={(event) => {\n                this.handlePriorityChange(event);\n              }}\n              required\n            >\n              <option>--Select Priority--</option>\n              <option value=\"l\">Low</option>\n              <option value=\"m\">Medium</option>\n              <option value=\"h\">High</option>\n            </select>\n            {this.state.priorityError ? \n            (<div className=\"error\">A priority needs to be selected</div>) : \n            (null)}\n\n          </div>\n\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Create Task\n          </button>\n        \n      </form>\n    );\n  }\n}\n","import React from \"react\";\nimport { toast } from \"react-toastify\";\n\nexport default class EditPostForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      taskname: \"\",\n      description: \"\",\n      deadline: \"\",\n      favorited: false,\n      priority: \"\",\n      finished: false\n    };\n  }\n\n  handleTitleChange(event) {\n    this.setState({ taskname: event.target.value });\n  }\n\n  handleBodyChange(event) {\n    this.setState({ description: event.target.value });\n  }\n\n  handlePriorityChange(event) {\n    this.setState({ priority: event.target.value });\n  }\n\n  handleDDLChange(event) {\n    this.setState( { deadline: event.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    const id = this.props.match.params.postId;\n\n    fetch(`https://jerryli-scheduler-api.herokuapp.com/api/posts/${id}`, {\n      method: \"PUT\",\n      body: JSON.stringify({\n        \"taskname\": this.state.taskname,\n        \"description\": this.state.description,\n        \"deadline\": this.state.deadline,\n        \"favorited\": this.state.favorited,\n        \"priority\": this.state.priority\n      }),\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((json) => {\n        console.log(json);\n        toast.success(`Task \"${json.taskname}\" was successfully updated`);\n        this.props.history.push(\"/\");\n      });\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params.postId;\n    fetch(`https://jerryli-scheduler-api.herokuapp.com/api/posts/${id}`)\n      .then((response) => {\n        // response is a promise\n        return response.json();\n      })\n      .then((json) => {\n        console.log(json);\n        // this state now have three attributes from json\n        this.setState(json);\n      });\n  }\n\n  render() {\n    return (\n      <form\n        onSubmit={(event) => {\n          this.handleSubmit(event);\n        }}\n      >\n        <div className=\"my-3\">\n          <label htmlFor=\"taskname\" className=\"form-label\">\n            Taskname\n          </label>\n          <input\n            id=\"taskname\"\n            className=\"form-control\"\n            value={this.state.taskname}\n            onChange={(event) => {\n              this.handleTitleChange(event);\n            }}\n          />\n          <div className=\"my-3\">\n            <label htmlFor=\"description\" className=\"form-label\">\n              Description\n            </label>\n            <textarea\n              id=\"description\"\n              className=\"form-control\"\n              value={this.state.description}\n              onChange={(event) => {\n                this.handleBodyChange(event);\n              }}\n            ></textarea>\n          </div>\n          <div className=\"my-3\">\n            <label htmlFor=\"ddl\" className=\"form-label\">\n              Deadline\n            </label>\n            <input\n              id=\"ddl\"\n              type=\"datetime-local\"\n              className=\"form-select\"\n              value={this.state.deadline}\n              onChange={(event) => {\n                this.handleDDLChange(event);\n              }}\n            />\n          </div>\n\n          <div className=\"my-3\">\n            <label htmlFor=\"priority\" className=\"form-label\">\n              Priority\n            </label>\n            <select\n              id=\"priority\"\n              className=\"form-select\"\n              value={this.state.priority}\n              onChange={(event) => {\n                this.handlePriorityChange(event);\n              }}\n            >\n              <option>--Select Priority--</option>\n              <option value=\"l\">Low</option>\n              <option value=\"m\">Medium</option>\n              <option value=\"h\">High</option>\n            </select>\n          </div>\n\n\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Edit Task\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n","import { array } from \"prop-types\";\nimport React from \"react\";\nimport Card from \"./Card\";\nimport { Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport \"./Card.css\";\n\nexport default class Procrastinatometer extends React.Component {\n    constructor(props) {\n        super(props);\n    \n        this.state = {\n          posts: [],\n          dates: [],\n          datesdesc: []\n        };\n      }\n\n    componentDidMount() {\n        document.title = \"Procrastinatometer Page\"\n\n        fetch(\n            \"https://jerryli-scheduler-api.herokuapp.com/api/posts\"\n          )\n            .then((response) => {\n              // response is a promise\n              return response.json();\n            })\n            .then((json) => {\n              console.log(json);\n              this.setState({ posts: json });\n            });\n    }\n\n    render() {\n        let ddl;\n        let date;\n        this.state.posts.map((post) => {\n            this.state.dates.push(post);\n            this.state.datesdesc.push(post);\n        })\n\n        this.state.dates.sort(function(a, b) {\n            return new Date(a.deadline) - new Date(b.deadline);\n        })\n\n        this.state.datesdesc.sort(function(a, b) {\n            return new Date(b.deadline) - new Date(a.deadline);\n        })\n\n        console.log(\"printing content of dates: \");\n        console.log(this.state.dates);\n        console.log(\"printing content of datesdesc: \");\n        console.log(this.state.datesdesc);\n\n        return (\n        <div>\n            <h2>3 Closest Deadlines</h2>\n            \n            {this.state.dates.slice(0,3).map((post) => {\n            \n            let initColor;\n            if(post.priority === \"l\"){\n                initColor = \"lightyellow\"\n            }\n            else if(post.priority === \"m\"){\n                initColor = \"coral\"\n            }\n            else if(post.priority === \"h\") {\n                initColor = \"crimson\"\n            }\n            let ddl = post.deadline;\n            ddl = ddl.substring(0, 10) + \" \" + ddl.substring(11, 16);\n            if(ddl.substring(11,13) < 12) { ddl += \" AM\"}\n            else {ddl += \" PM\"}\n            \n            return (\n                <Card\n                    key={post.id}\n                    title={post.taskname}\n                    onClick={(appendedTitle, updatedColor) => {\n                        this.setState({ title: appendedTitle, displayColor: updatedColor });\n                    }}\n                    emptyColor=\"lightyellow\"\n                    selectedColor=\"lightgreen\"\n                    renderCard={(onClick) => {\n                        return (\n                            <Link to={`/posts/${post.id}`}>\n                                <button\n                                    data-inline=\"true\"\n                                    type=\"button\"\n                                    className=\"card btn\"\n                                    style={{\n                                    width: \"18rem\",\n                                    backgroundColor: initColor\n                                    }}\n                                    onClick={onClick}\n                                >\n                                    <div className=\"card-body\">\n                                    <h5 className=\"card-title\">{post.taskname}</h5>\n                                    <p className=\"card-text\">\n                                        {post.description}\n                                    </p>\n                                    <p className=\"card-text\">\n                                        DDL: {ddl}\n                                    </p>\n                                    </div>\n                                </button>\n                            </Link>\n                        );\n                    }}\n                    ></Card>\n                );\n                }\n            )}\n\n            <h2>You have a lot of time to do these things</h2>\n            <p>You may want to break them into smaller tasks</p>\n            \n            {this.state.datesdesc.slice(0,3).map((post) => {\n            \n            let initColor;\n            if(post.priority === \"l\"){\n                initColor = \"lightyellow\"\n            }\n            else if(post.priority === \"m\"){\n                initColor = \"coral\"\n            }\n            else if(post.priority === \"h\") {\n                initColor = \"crimson\"\n            }\n            let ddl = post.deadline;\n            ddl = ddl.substring(0, 10) + \" \" + ddl.substring(11, 16);\n            if(ddl.substring(11,13) < 12) { ddl += \" AM\"}\n            else {ddl += \" PM\"}\n            \n            return (\n                <Card\n                    key={post.id}\n                    title={post.taskname}\n                    onClick={(appendedTitle, updatedColor) => {\n                        this.setState({ title: appendedTitle, displayColor: updatedColor });\n                    }}\n                    emptyColor=\"lightyellow\"\n                    selectedColor=\"lightgreen\"\n                    renderCard={(onClick) => {\n                        return (\n                            <Link to={`/posts/${post.id}`}>\n                                <button\n                                    data-inline=\"true\"\n                                    type=\"button\"\n                                    className=\"card btn\"\n                                    style={{\n                                    width: \"18rem\",\n                                    backgroundColor: initColor\n                                    }}\n                                    onClick={onClick}\n                                >\n                                    <div className=\"card-body\">\n                                    <h5 className=\"card-title\">{post.taskname}</h5>\n                                    <p className=\"card-text\">\n                                        {post.description}\n                                    </p>\n                                    <p className=\"card-text\">\n                                        DDL: {ddl}\n                                    </p>\n                                    </div>\n                                </button>\n                            </Link>\n                        );\n                    }}\n                    ></Card>\n                );\n                }\n            )}\n        </div>);\n    }\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, useLocation } from \"react-router-dom\";\nimport Navigation from \"./Navigation\";\nimport Posts from \"./Posts\";\nimport Post from \"./Post\";\nimport Favorited from \"./Favorited.js\";\nimport CreatePostForm from \"./CreatePostForm\";\nimport EditPostForm from \"./EditPostForm\";\nimport { ToastContainer } from \"react-toastify\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./styles.css\";\nimport Procrastinatometer from \"./Procrastinatometer\";\n\nexport default function App() {\n    \n    return (\n      <Router>\n        <div className=\"container\">\n          <Navigation />\n\n          <Switch>\n            <Route path=\"/favorited\">\n              <Favorited />\n            </Route>\n            <Route path=\"/procrastinatometer\">\n              <Procrastinatometer />\n            </Route>\n            <Route path=\"/posts/new\" component={CreatePostForm} />\n            {/* put the specific route before generic routes */}\n            <Route path=\"/posts/:postId/edit\" component={EditPostForm} />\n            <Route path=\"/posts/:postId\" component={Post} />\n            <Route exact path=\"/\">\n              <Posts />\n            </Route>\n            <Route path=\"*\">\n              <NoMatch />\n            </Route>\n          </Switch>\n        </div>\n        <ToastContainer />\n      </Router>\n    );\n}\n\nfunction NoMatch() {\n  let location = useLocation();\n  return (\n    <div>\n      <h3>\n        No match for <code>{location.pathname}</code>\n      </h3>\n    </div>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}